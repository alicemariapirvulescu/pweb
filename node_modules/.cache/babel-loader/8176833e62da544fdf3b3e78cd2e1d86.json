{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alice-Maria\\\\Downloads\\\\licenta-fe\\\\libs\\\\authentication\\\\src\\\\containers\\\\login\\\\Map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport GoogleMapReact from 'google-map-react';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  const [options, setOptions] = useState(() => {\n    return {\n      center: {\n        lat: 15.6,\n        lng: 13\n      },\n      zoom: 5\n    };\n  });\n  const [longitude, setLongitude] = useState();\n  const [latitude, setLatitude] = useState();\n  const {\n    restaurants\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      console.log(\"Calculating geolocation\");\n      navigator.geolocation.getCurrentPosition(showPosition, showError);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n\n    return;\n  }\n\n  function showPosition(position) {\n    setOptions({\n      center: {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      },\n      zoom: 12\n    });\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n    console.log(position);\n  }\n\n  function showError(error) {\n    if (error.PERMISSION_DENIED) {\n      console.log(\"Used has denied geolocation\");\n    }\n  }\n\n  const renderMarkers = (map, maps) => {\n    let res = [];\n    let marker = new maps.Marker({\n      position: {\n        lat: latitude,\n        lng: longitude\n      },\n      map,\n      title: 'OneMarker!'\n    });\n    res.concat(marker);\n    restaurants.map(r => {\n      let marker2 = new maps.Marker({\n        position: {\n          lat: r.latitude,\n          lng: r.longitude\n        },\n        map\n      });\n      console.log(r.latitude + \"\" + r.longitude);\n      res.concat(marker2);\n    });\n    return res;\n  };\n\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyCVpiO2xVb6JFKp_y0DEJ02OVRhayNyvIw\"\n        },\n        center: options.center,\n        zoom: options.zoom,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => renderMarkers(map, maps)\n      }, new Date().getTime(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  );\n};\n\nexport default Map;","map":null,"metadata":{},"sourceType":"module"}