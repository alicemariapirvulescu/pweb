{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alice-Maria\\\\Downloads\\\\licenta-fe\\\\libs\\\\authentication\\\\src\\\\containers\\\\login\\\\GMapDemo.tsx\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport '../../index.css';\nimport ReactDOM from 'react-dom';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { GMap } from 'primereact/gmap';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Toast } from 'primereact/toast';\nimport { loadGoogleMaps, removeGoogleMaps } from './GoogleMaps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GMapDemo = () => {\n  const [googleMapsReady, setGoogleMapsReady] = useState(false);\n  const [dialogVisible, setDialogVisible] = useState(false);\n  const [markerTitle, setMarkerTitle] = useState('');\n  const [draggableMarker, setDraggableMarker] = useState(false);\n  const [overlays, setOverlays] = useState(null);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const toast = useRef(null);\n  const infoWindow = useRef(null);\n  useEffect(() => {\n    loadGoogleMaps(() => {\n      setGoogleMapsReady(true);\n    });\n    return () => {\n      removeGoogleMaps();\n    };\n  }, []);\n\n  const onMapClick = event => {\n    setDialogVisible(true);\n    setSelectedPosition(event.latLng);\n  };\n\n  const onOverlayClick = event => {\n    let isMarker = event.overlay.getTitle !== undefined;\n\n    if (isMarker) {\n      let title = event.overlay.getTitle();\n      infoWindow.current = infoWindow.current || new google.maps.InfoWindow();\n      infoWindow.setContent('<div>' + title + '</div>');\n      infoWindow.open(event.map, event.overlay);\n      event.map.setCenter(event.overlay.getPosition());\n      toast.current.show({\n        severity: 'info',\n        summary: 'Marker Selected',\n        detail: title\n      });\n    } else {\n      toast.current.show({\n        severity: 'info',\n        summary: 'Shape Selected',\n        detail: ''\n      });\n    }\n  };\n\n  const handleDragEnd = event => {\n    toast.current.show({\n      severity: 'info',\n      summary: 'Marker Dragged',\n      detail: event.overlay.getTitle()\n    });\n  };\n\n  const addMarker = () => {\n    let newMarker = new google.maps.Marker({\n      position: {\n        lat: selectedPosition.lat(),\n        lng: selectedPosition.lng()\n      },\n      title: markerTitle,\n      draggable: draggableMarker\n    });\n    setOverlays([...overlays, newMarker]);\n    setDialogVisible(false);\n    setDraggableMarker(false);\n    setMarkerTitle('');\n  };\n\n  const onMapReady = event => {\n    setOverlays([new google.maps.Marker({\n      position: {\n        lat: 36.879466,\n        lng: 30.667648\n      },\n      title: \"Konyaalti\"\n    }), new google.maps.Marker({\n      position: {\n        lat: 36.883707,\n        lng: 30.689216\n      },\n      title: \"Ataturk Park\"\n    }), new google.maps.Marker({\n      position: {\n        lat: 36.885233,\n        lng: 30.702323\n      },\n      title: \"Oldtown\"\n    }), new google.maps.Polygon({\n      paths: [{\n        lat: 36.9177,\n        lng: 30.7854\n      }, {\n        lat: 36.8851,\n        lng: 30.7802\n      }, {\n        lat: 36.8829,\n        lng: 30.8111\n      }, {\n        lat: 36.9177,\n        lng: 30.8159\n      }],\n      strokeOpacity: 0.5,\n      strokeWeight: 1,\n      fillColor: '#1976D2',\n      fillOpacity: 0.35\n    }), new google.maps.Circle({\n      center: {\n        lat: 36.90707,\n        lng: 30.56533\n      },\n      fillColor: '#1976D2',\n      fillOpacity: 0.35,\n      strokeWeight: 1,\n      radius: 1500\n    }), new google.maps.Polyline({\n      path: [{\n        lat: 36.86149,\n        lng: 30.63743\n      }, {\n        lat: 36.86341,\n        lng: 30.72463\n      }],\n      geodesic: true,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.5,\n      strokeWeight: 2\n    })]);\n  };\n\n  const onHide = event => {\n    setDialogVisible(false);\n  };\n\n  const options = {\n    center: {\n      lat: 36.890257,\n      lng: 30.707417\n    },\n    zoom: 12\n  };\n\n  const footer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Yes\",\n      icon: \"pi pi-check\",\n      onClick: addMarker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"No\",\n      icon: \"pi pi-times\",\n      onClick: onHide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 20\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), googleMapsReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(GMap, {\n        overlays: overlays,\n        options: options,\n        style: {\n          width: '100%',\n          minHeight: '320px'\n        },\n        onMapReady: onMapReady,\n        onMapClick: onMapClick,\n        onOverlayClick: onOverlayClick,\n        onOverlayDragEnd: handleDragEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: \"New Location\",\n      visible: dialogVisible,\n      width: \"300px\",\n      modal: true,\n      footer: footer,\n      onHide: onHide,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid p-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          style: {\n            paddingTop: '.75em'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            type: \"text\",\n            id: \"title\",\n            value: markerTitle,\n            onChange: e => setMarkerTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          style: {\n            paddingTop: '.75em'\n          },\n          children: \"Lat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            readOnly: true,\n            value: selectedPosition ? selectedPosition.lat() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          style: {\n            paddingTop: '.75em'\n          },\n          children: \"Lng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            readOnly: true,\n            value: selectedPosition ? selectedPosition.lng() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          style: {\n            paddingTop: '.75em'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"drg\",\n            children: \"Drag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: draggableMarker,\n            onChange: event => setDraggableMarker(event.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(GMapDemo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 17\n}, this), rootElement);","map":null,"metadata":{},"sourceType":"module"}