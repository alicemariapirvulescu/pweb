{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alice-Maria\\\\Downloads\\\\licenta-fe\\\\libs\\\\authentication\\\\src\\\\containers\\\\oauth2\\\\OauthRedirect.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { authSlice } from '../redux/slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OAuth2RedirectHandler extends Component {\n  getUrlParameter(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(this.props.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n  }\n\n  render() {\n    const token = this.getUrlParameter('token');\n    const error = this.getUrlParameter('error');\n\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      this.props.setIsLoggedIn();\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: {\n          pathname: \"/restaurants\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: {\n          pathname: \"/login\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    auth\n  } = state;\n  return {\n    isLoggedIn: auth.isLoggedIn\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIsLoggedIn: () => dispatch(authSlice.setIsLoggedIn()),\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OAuth2RedirectHandler);","map":null,"metadata":{},"sourceType":"module"}